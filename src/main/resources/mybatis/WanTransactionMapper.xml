<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdkj.coin.dao.IWanTransactionDAO">
	<resultMap id="wanTransaction_DB_Result" type="com.cdkj.coin.domain.WanTransaction">
		<result column="hash" property="hash" />
		<result column="nonce" property="nonce" />
		<result column="block_hash" property="blockHash" />
		<result column="block_number" property="blockNumber" />
		<result column="transaction_index" property="transactionIndex" />
		<result column="from" property="from" />
		<result column="to" property="to" />
		<result column="value" property="value" />
		<result column="gas_price" property="gasPrice" />
		<result column="gas" property="gas" />
		<result column="block_create_datetime" property="blockCreateDatetime" />
		<result column="sync_datetime" property="syncDatetime" />
		<result column="gas_used" property="gasUsed" />

	</resultMap>

	<sql id="where_condition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
		    <if test="hash != null and hash != '' ">
				AND t.hash = #{hash}
			</if>
			<if test="status != null and status != '' ">
				AND t.status = #{status}
			</if>
			<if test="blockCreateDatetimeStart != null and blockCreateDatetimeStart != ''">
			    AND t.block_create_datetime >= #{blockCreateDatetimeStart}
			</if>
			<if test="blockCreateDatetimeEnd != null and blockCreateDatetimeEnd != ''">
				<![CDATA[ AND t.block_create_datetime <= #{blockCreateDatetimeEnd}  ]]>
			</if>
			<if test="from != null and from != ''">
				 t.from = #{from} OR
			</if>
			<if test="to != null and to != ''">
				 t.to = #{to}
			</if>
		</trim>
	</sql>

	<sql id="wanTx">
		`hash`,`nonce`,`block_hash`,`block_number`,`transaction_index`,`from`,`to`,`value`,`gas_price`,`gas`,
		`block_create_datetime`,`sync_datetime`,`status`,`gas_used`
	</sql>

	<update id="updateTxStatus" parameterType="com.cdkj.coin.domain.WanTransaction">
		UPDATE  tctq_wan_transaction SET `status` = '1' where `hash` in
		<foreach collection="list" item="tx" open="(" separator="," close=")">
			#{tx.hash}
		</foreach>
	</update>

	<select id="select_wanTransaction" parameterType="wanTransaction" resultMap="wanTransaction_DB_Result">
		SELECT

		<include refid="wanTx"/>

		FROM
		tctq_wan_transaction t
		<include refid="where_condition" />
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>

	<select id="select_wanTransaction_count" parameterType="wanTransaction"
		resultType="java.lang.Long">
		SELECT count(1) FROM tctq_wan_transaction t
		<include refid="where_condition" />
	</select>


	<insert id="insertWanTransaction" parameterType="com.cdkj.coin.domain.WanTransaction">
		INSERT INTO
		`tctq_wan_transaction`(`hash`, nonce, block_hash, block_number,transaction_index,`from`,`to`,`value`,gas_price,gas,
							  block_create_datetime,sync_datetime,`status`,`gas_used`)
		VALUES(
			#{hash} ,#{nonce} ,#{blockHash} ,#{blockNumber} ,#{transactionIndex} ,
			#{from}
			,#{to},#{value},#{gasPrice},#{gas},#{blockCreateDatetime},now(),
			#{status},#{gasUsed}
		)
	</insert>

	<insert id="insertTxList" parameterType="List">

		INSERT INTO
			`tctq_wan_transaction`(`hash`, nonce, block_hash, block_number,transaction_index,`from`,`to`,`value`,gas_price,gas,
									block_create_datetime,sync_datetime,`status`,gas_used)
		VALUES

		  <foreach collection="list" item="tx" separator=",">
			  (
			  #{tx.hash} ,#{tx.nonce} ,#{tx.blockHash} ,#{tx.blockNumber} ,
			  #{tx.transactionIndex} ,#{tx.from}
			  ,#{tx.to},#{tx.value},#{tx.gasPrice},#{tx.gas},#{tx.blockCreateDatetime},now(),
			  #{tx.status},#{tx.gasUsed}
			  )
		  </foreach>

	</insert>

</mapper>