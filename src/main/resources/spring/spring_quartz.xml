<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <context:component-scan base-package="com.cdkj.coin">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- ################## 调度中心 ######################## -->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <!-- 以太坊 -->
                <ref bean="ethTransactionSyncTrigger"/>
                <ref bean="ethPushSyncTrigger"/>
                <!-- 比特币 -->
                <ref bean="btcPushSyncTrigger"/>
           		<ref bean="btcTransactionSyncTrigger"/>
           		<!-- 万维链 -->
           		<ref bean="wanTransactionSyncTrigger"/>
           		<ref bean="wanPushSyncTrigger"/>
           		<!-- 以太坊token -->
           		<!-- <ref bean="tokenTransactionSyncTrigger"/> -->
           		<!-- <ref bean="tokenPushSyncTrigger"/> -->
           		<!-- 万维链token -->
           		<ref bean="wtokenTransactionSyncTrigger"/>
           		<ref bean="wtokenPushSyncTrigger"/>
           		
            </list>
        </property>
        <property name="autoStartup" value="true"/>
    </bean>

    <!-- 调度触发器，但要加入调度中心-->

    <!-- ########   ETH  #############-->
    <bean id="ethTransactionSyncTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="doEthTransactionSync"/>
        <!--<property name="cronExpression" value="0 */1 * * * ?" />-->
        <property name="cronExpression" value="*/20 * * * * ?"/>
    </bean>

    <bean id="doEthTransactionSync"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="ethTxAOImpl"/>
        <property name="targetMethod" value="doEthTransactionSync"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
        <property name="concurrent" value="false"/>
    </bean>

    <!-- ########   ETH交易推送  #############-->
    <bean id="ethPushSyncTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="pushTx"/>
        <property name="cronExpression" value="*/20 * * * * ?"/>
    </bean>

    <bean id="pushTx"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="ethTxAOImpl"/>
        <property name="targetMethod" value="pushTx"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
        <property name="concurrent" value="false"/>
    </bean>

    <!-- ########    BTC 交易扫描        #############-->
    <bean id="btcTransactionSyncTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="doBtcTransactionSync"/>
        <!-- <property name="cronExpression" value="0 */1 * * * ?" /> -->
        <property name="cronExpression" value="*/20 * * * * ?"/>
    </bean>

    <bean id="doBtcTransactionSync"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="BTCTxAOImpl"/>
        <property name="targetMethod" value="doBtcTransactionSync"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
        <property name="concurrent" value="false"/>
    </bean>

    <!-- ########   BTC交易推送  #############-->
    <bean id="btcPushSyncTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="btcPushTx"/>
        <property name="cronExpression" value="*/20 * * * * ?"/>
    </bean>

    <bean id="btcPushTx"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="BTCTxAOImpl"/>
        <property name="targetMethod" value="pushTx"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
        <property name="concurrent" value="false"/>
    </bean>
    
    <!-- ########   WAN  #############-->
    <bean id="wanTransactionSyncTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="doWanTransactionSync"/>
        <!--<property name="cronExpression" value="0 */1 * * * ?" />-->
        <property name="cronExpression" value="*/20 * * * * ?"/>
    </bean>

    <bean id="doWanTransactionSync"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="wanTxAOImpl"/>
        <property name="targetMethod" value="doWanTransactionSync"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
        <property name="concurrent" value="false"/>
    </bean>

    <!-- ########   WAN交易推送  #############-->
    <bean id="wanPushSyncTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="pushWanTx"/>
        <property name="cronExpression" value="*/20 * * * * ?"/>
    </bean>

    <bean id="pushWanTx"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="wanTxAOImpl"/>
        <property name="targetMethod" value="pushTx"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
        <property name="concurrent" value="false"/>
    </bean>
    
    <!-- ########  WAN TOKEN  #############-->
    <bean id="wtokenTransactionSyncTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="doWTokenTransactionSync"/>
        <!--<property name="cronExpression" value="0 */1 * * * ?" />-->
        <property name="cronExpression" value="*/20 * * * * ?"/>
    </bean>

    <bean id="doWTokenTransactionSync"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="WTokenTxAOImpl"/>
        <property name="targetMethod" value="doWTokenTransactionSync"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
        <property name="concurrent" value="false"/>
    </bean>
    
    <!-- ########  WAN TOKEN交易推送  #############-->
    <bean id="wtokenPushSyncTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="wtokenPushTx"/>
        <property name="cronExpression" value="*/20 * * * * ?"/>
    </bean>

    <bean id="wtokenPushTx"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="WTokenTxAOImpl"/>
        <property name="targetMethod" value="pushTx"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
        <property name="concurrent" value="false"/>
    </bean>

</beans>
